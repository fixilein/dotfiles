# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd && notify-send "sxhkd reloaded" -i .

#
# bspwm hotkeys
#

# quit/restart bspwm
# super + alt + {q,r}
# 	bspc {quit,wm -r}

# reload screen setup 
super + shift + r
     sh ~/scripts/screen.sh

# start / kill compositor
super + {_, shift +} z
    {picom --experimental-backends &,killall picom}

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
#super + m
#	bspc desktop -l next

# send the newest marked node to the newest preselected node
# super + y
#	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest.local

#
# state/flags
#

# set the window state (tiled, floating, toggle fullscreen)
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,\~fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
# super + {p,b,comma,period}
# 	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
# super + {_,shift + }c
#	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last desktop on the current monitor
super + Tab
    bspc desktop -f last.local

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} focused:'^{1-9,10}'

# focus or send to the next monitor
super + {_,shift + } asciicircum
    bspc {monitor --focus next,node -m next --follow}


#
# preselect
#

# preselect the direction
super + alt + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
# super + alt + {1-9}
# 	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
# super + alt + shift + space
# bspc node -p cancel

# cancel the preselection for the focused desktop
super + alt + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# Move current window to a pre-selected space
super + comma
    bspc node -n last.!automatic

# resize: expand/contract a window 
super + control + {h,j,k,l}
    bspc node -t tiled; \
    bspc node -z {left -75 0 || bspc node -z right -75 0, \
                bottom 0 50 || bspc node -z top 0 50,\
                top 0 -50 || bspc node -z bottom 0 -50,\
                right 75 0 || bspc node -z left 75 0}

# expand a window by moving one of its side outward
# super + alt + {h,j,k,l}
#	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
# super + alt + shift + {h,j,k,l}
#	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

#
# bsp-layout
#

# toggle bsp-layout
super + {_, shift} +e
   bsp-layout once {tall,rtall}

#
# applications
#

# help
super + u
    sh ~/scripts/sxhkd-help

# terminal emulator
super + {_, shift +} Return
    {alacritty,urxvt}

# program launcher
super + @space
	rofi -show drun -sidebar-mode -modi drun,window -lines 12 -show-icons

XF86Search
   rofi -show run 

super + m 
	telegram-desktop

# whatsapp web
super + shift + m 
    google-chrome-stable --app=https://web.whatsapp.com/

super + n
    google-chrome-stable --app=https://notion.so/
    # notion-app

# web browser
super + {_, shift +} w
	google-chrome-stable { , --incognito}

# remote desktop
super + r 
    google-chrome-stable --app=https://remotedesktop.google.com/access

super + c
    google-chrome-stable --app=https://calendar.google.com

#
# screenshots and screen recording
#

# screenshot gui
Print
	flameshot gui -p /tmp

# screenshot full
super + Print
	flameshot full -c

# launch simplescreenrecorder
super + shift + Print 
    simplescreenrecorder

# lock screen
super + alt + x
    betterlockscreen -l dim -t "i use arch btw"

# pulseaudio control
super + b
	pavucontrol

#
# volume buttons
#

XF86AudioLowerVolume
	pulsemixer --change-volume -5

XF86AudioRaiseVolume
	pulsemixer --change-volume +5

XF86AudioMute 
	pulsemixer --toggle-mute

#
# brightness buttons
#

XF86MonBrightnessDown
    lux -s 5%

XF86MonBrightnessUp
    lux -a 5%

#
# media buttons 
#

XF86AudioPlay 
    playerctl play-pause

XF86AudioNext 
    playerctl next

XF86AudioPrev 
    playerctl previous

# unfortunately this does not work
# (i think because of the multiple curly braces in the command)
#alt + {h,j,k,l}
#    xdotool keyup {h,j,k,l} key --clearmodifiers {Left,Down Up,Right} 

alt + j 
    xdotool keyup j key --clearmodifiers Down

alt + k
    xdotool keyup k key --clearmodifiers Up

alt + h
    xdotool keyup h key --clearmodifiers Left

#notify-send "h down"; \
#xdotool keyup Alt_L keyup h key ; \
#xdotool keydown Left; \
#keydown Alt_L keydown h # xdotool keyup h keydown --clearmodifiers Left

#alt + @h
    #notify-send "h up"; \
    #xdotool keyup Alt_L keyup h keyup Left # xdotool keyup h keyup --clearmodifiers Left

alt + l
    xdotool keyup l key --clearmodifiers Right

ctrl + alt + Delete
    sleep 0.5; systemctl suspend

# Emulate delete key
@alt + BackSpace
    xte 'keyup Alt_L' 'key Delete' 'keydown Alt_L'

# from man sxhkd:
# If @ is added at the beginning of the keysym, the command will be run
# on key release events, otherwise on key press events.
#
# If ~ is added at the beginning of the keysym, the captured event will
# be replayed for the other clients.

